<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <title>Earthquake Realtime Dashboard</title>
  <meta name="description" content="Earthquake Realtime Dashboard Visualization" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="generator" content="Codeply">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.1/animate.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css" />
  <!-- <link rel="stylesheet" href="css/styles.css" /> -->
  <link rel="stylesheet" href="/stylesheets/styles.css"/>
  
  <script src="https://cdn.localizejs.com/localize.js"></script>

<script>!function(a){if(!a.Localize){a.Localize={};for(var e=["translate","untranslate","phrase","initialize","translatePage","setLanguage","getLanguage","detectLanguage","getAvailableLanguages","untranslatePage","bootstrap","prefetch","on","off"],t=0;t<e.length;t++)a.Localize[e[t]]=function(){}}}(window);</script>

<script>
 Localize.initialize({
  key: '6gmpfKwVvTWyP',
  rememberLanguage: true
 });
</script>
  
  <style>
  #earth {
  width: 100px;
  height: 100px;
  background: url(http://www.noirextreme.com/digital/Earth-Color4096.jpg);
  border-radius: 50%;
  background-size: 210px;
  box-shadow: inset 16px 0 40px 6px rgb(0, 0, 0),
    inset -3px 0 6px 2px rgba(255, 255, 255, 0.2);
  animation-name: rotate;
  animation-duration: 4s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  }

  @keyframes rotate {
  from { background-position-x: 0px; }
  to { background-position-x: 210px; }
  }
    #container {
      height: 600px;
      min-width: 310px;
      max-width: 900px;
      margin: 0 auto;
    }

    #container1 {
      height: 500px;
      min-width: 310px;
      max-width: 800px;
      margin: 0 auto;
    }

    .loading {
      margin-top: 10em;
      text-align: center;
      color: gray;
    }
  </style>
  <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js"></script>


</head>

<body ng-app="app" ng-controller="analysisController">
  <nav id="topNav" class="navbar navbar-default navbar-fixed-top">
    <div class="container-fluid">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-navbar">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand page-scroll" href="."><i class="ion-ios-analytics-outline"></i>Real-time Earthquake</a>
      </div>
      <div class="navbar-collapse collapse" id="bs-navbar">
        <ul class="nav navbar-nav">
            <li>
                <a class="page-scroll" href="/dashboard">Dashboard</a>
            </li>
            <li>
                <a class="page-scroll" href="/statistics">Statistics</a>
            </li>
            <li>
                <a class="page-scroll" href="/recentearthquakes">Recent Earthquakes</a>
            </li>
            <li>
              <a class="page-scroll" href="/globe3d">3D Visualization</a>
            </li>
            <li>
                <a class="page-scroll" href="/alerts">Set Alerts</a>
            </li>
            <li>
                <a class="page-scroll" href="/reports">Reports</a>
            </li>
            <!-- <li>
                <a class="page-scroll" href="#last">Contact</a>
            </li> -->
        </ul>

      </div>
    </div>
  </nav>
  <section class="bg-primary" id="one">
    <div class="container">
      <div class="row">
        <!-- <div style="background-color:#eee;"id="earth"></div> -->

        <div class="col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-2 text-center">
          <h2 style="padding-top:50px; color:#fff;" class="margin-top-2 text-primary">Earthquakes by State</h2>

          <div id="container"></div>


        </div>
      </div>
    </div>
  </section>
  <section class="bg-primary" id="one">
    <div class="container">
      <div class="row">
        <div class="col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-2 text-center">

          <h2 style="color:#fff; "class="margin-top-0 text-primary">Avg Magnitude of earthquakes by State</h2>
          <div id="container1"></div>
          <br>
        </div>
      </div>
    </div>
  </section>
  <!--scripts loaded here from cdn for performance -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.3/jquery.easing.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/wow/1.1.2/wow.js"></script>
  <script src="https://code.highcharts.com/maps/highmaps.js"></script>
  <script src="https://code.highcharts.com/maps/modules/map.js"></script>
  <script src="http://code.highcharts.com/mapdata/countries/us/us-all.js"></script>
  <script src="https://code.highcharts.com/maps/modules/exporting.js"></script>

  <script src="https://code.highcharts.com/mapdata/countries/us/custom/us-all-mainland.js"></script>
  <!-- <script src="https://code.highcharts.com/highcharts.js"></script> -->


  <script src="https://code.highcharts.com/maps/modules/data.js"></script>
  <script src="https://code.highcharts.com/maps/modules/exporting.js"></script>
  <script src="https://code.highcharts.com/mapdata/countries/us/custom/us-small.js"></script>
  <script>
    var app = angular.module('app', []);
    app.controller("analysisController", function($scope, $http) {
      console.log("controller");

      console.log("home function");
      $http({
        method: 'GET',
        url: '/getNoOfEarthQuakes'
      }).success(function(res) {
        $(function() {

          // Prepare demo data
          var dummy = res;
          var data1 = [];
          for (var k = 0; k < dummy.length; k++) {
            switch (dummy[k].State_name) {
              case 'Alabama':
                data1.push({
                  "hc-key": "us-al",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Alaska':
                data1.push({
                  "hc-key": "us-ak",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Arizona':
                data1.push({
                  "hc-key": "us-az",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Arkansas':
                data1.push({
                  "hc-key": "us-ar",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'California':
                data1.push({
                  "hc-key": "us-ca",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Colorado':
                data1.push({
                  "hc-key": "us-co",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Connecticut':
                data1.push({
                  "hc-key": "us-ct",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Georgia':
                data1.push({
                  "hc-key": "us-ga",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Hawaii':
                data1.push({
                  "hc-key": "us-hi",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Idaho':
                data1.push({
                  "hc-key": "us-id",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Illinois':
                data1.push({
                  "hc-key": "us-il",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Indiana':
                // code block
                data1.push({
                  "hc-key": "us-in",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Kansas':
                data1.push({
                  "hc-key": "us-ks",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Kentucky':
                data1.push({
                  "hc-key": "us-ky",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Louisiana':
                data1.push({
                  "hc-key": "us-la",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Maine':
                data1.push({
                  "hc-key": "us-me",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Maryland':
                data1.push({
                  "hc-key": "us-md",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Massachusetts':
                data1.push({
                  "hc-key": "us-ma",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Michigan':
                data1.push({
                  "hc-key": "us-mi",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Minnesota':
                data1.push({
                  "hc-key": "us-mn",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Mississippi':
                data1.push({
                  "hc-key": "us-ms",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Missouri':
                data1.push({
                  "hc-key": "us-mo",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Montana':
                data1.push({
                  "hc-key": "us-mt",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Nebraska':
                data1.push({
                  "hc-key": "us-ne",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Nevada':
                data1.push({
                  "hc-key": "us-nv",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'New Hampshire':
                data1.push({
                  "hc-key": "us-nh",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'New Jersey':
                data1.push({
                  "hc-key": "us-nj",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'New Mexico':
                data1.push({
                  "hc-key": "us-nm",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'New York':
                data1.push({
                  "hc-key": "us-ny",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'North Carolina':
                data1.push({
                  "hc-key": "us-nc",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'North Dakota':
                data1.push({
                  "hc-key": "us-nd",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Ohio':
                data1.push({
                  "hc-key": "us-oh",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Oklahoma':
                data1.push({
                  "hc-key": "us-ok",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Oregon':
                data1.push({
                  "hc-key": "us-or",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Pennsylvania':
                data1.push({
                  "hc-key": "us-pa",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Rhode Island':
                data1.push({
                  "hc-key": "us-ri",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'South Carolina':
                data1.push({
                  "hc-key": "us-sc",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'South Dakota':
                data1.push({
                  "hc-key": "us-sd",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Tennessee':
                data1.push({
                  "hc-key": "us-tn",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Texas':
                data1.push({
                  "hc-key": "us-tx",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Utah':
                data1.push({
                  "hc-key": "us-ut",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Vermont':
                data1.push({
                  "hc-key": "us-vt",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Virginia':
                data1.push({
                  "hc-key": "us-va",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Washington':
                data1.push({
                  "hc-key": "us-wa",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'West Virginia':
                data1.push({
                  "hc-key": "us-wv",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Wisconsin':
                data1.push({
                  "hc-key": "us-wi",
                  "value": dummy[k].No_EQ
                });
                break;
              case 'Wyoming':
                data1.push({
                  "hc-key": "us-wy",
                  "value": dummy[k].No_EQ
                });
                break;
              default:
                // default code block
            }

          }

          // Initiate the chart
          $('#container').highcharts('Map', {

            title: {
              text: 'Earthquakes by State for Past 5 Year'
            },

            subtitle: {
              text: 'Total No of Earthquakes by State'
            },

            mapNavigation: {
              enabled: true,
              buttonOptions: {
                verticalAlign: 'bottom'
              }
            },

            colorAxis: {
              min: 0
            },

            series: [{
              data: data1,
              mapData: Highcharts.maps['countries/us/custom/us-all-mainland'],
              joinBy: 'hc-key',
              name: 'Random data',
              states: {
                hover: {
                  color: '#BADA55'
                }
              },
              dataLabels: {
                enabled: true,
                format: '{point.name}'
              }
            }]
          });
        });

      }).error(function(error) {
        console.log("error");
        alert("error");
      });



      $http({
        method: 'GET',
        url: '/getAverageMagnitude'
      }).success(function(res) {
        $(function() {

          // Prepare demo data
          var dummy2 = res;
          var data2 = [];
          for (var m = 0; m < dummy2.length; m++) {
            switch (dummy2[m].State_name) {
              case 'Alabama':
                data2.push({
                  "hc-key": "us-al",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Alaska':
                data2.push({
                  "hc-key": "us-ak",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Arizona':
                data2.push({
                  "hc-key": "us-az",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Arkansas':
                data2.push({
                  "hc-key": "us-ar",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'California':
                data2.push({
                  "hc-key": "us-ca",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Colorado':
                data2.push({
                  "hc-key": "us-co",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Connecticut':
                data2.push({
                  "hc-key": "us-ct",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Georgia':
                data2.push({
                  "hc-key": "us-ga",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Hawaii':
                data2.push({
                  "hc-key": "us-hi",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Idaho':
                data2.push({
                  "hc-key": "us-id",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Illinois':
                data2.push({
                  "hc-key": "us-il",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Indiana':
                // code block
                data2.push({
                  "hc-key": "us-in",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Kansas':
                data2.push({
                  "hc-key": "us-ks",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Kentucky':
                data2.push({
                  "hc-key": "us-ky",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Louisiana':
                data2.push({
                  "hc-key": "us-la",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Maine':
                data2.push({
                  "hc-key": "us-me",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Maryland':
                data2.push({
                  "hc-key": "us-md",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Massachusetts':
                data2.push({
                  "hc-key": "us-ma",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Michigan':
                data2.push({
                  "hc-key": "us-mi",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Minnesota':
                data2.push({
                  "hc-key": "us-mn",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Mississippi':
                data2.push({
                  "hc-key": "us-ms",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Missouri':
                data2.push({
                  "hc-key": "us-mo",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Montana':
                data2.push({
                  "hc-key": "us-mt",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Nebraska':
                data2.push({
                  "hc-key": "us-ne",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Nevada':
                data2.push({
                  "hc-key": "us-nv",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'New Hampshire':
                data2.push({
                  "hc-key": "us-nh",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'New Jersey':
                data2.push({
                  "hc-key": "us-nj",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'New Mexico':
                data2.push({
                  "hc-key": "us-nm",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'New York':
                data2.push({
                  "hc-key": "us-ny",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'North Carolina':
                data2.push({
                  "hc-key": "us-nc",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'North Dakota':
                data2.push({
                  "hc-key": "us-nd",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Ohio':
                data2.push({
                  "hc-key": "us-oh",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Oklahoma':
                data2.push({
                  "hc-key": "us-ok",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Oregon':
                data2.push({
                  "hc-key": "us-or",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Pennsylvania':
                data2.push({
                  "hc-key": "us-pa",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Rhode Island':
                data2.push({
                  "hc-key": "us-ri",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'South Carolina':
                data2.push({
                  "hc-key": "us-sc",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'South Dakota':
                data2.push({
                  "hc-key": "us-sd",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Tennessee':
                data2.push({
                  "hc-key": "us-tn",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Texas':
                data2.push({
                  "hc-key": "us-tx",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Utah':
                data2.push({
                  "hc-key": "us-ut",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Vermont':
                data2.push({
                  "hc-key": "us-vt",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Virginia':
                data2.push({
                  "hc-key": "us-va",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Washington':
                data2.push({
                  "hc-key": "us-wa",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'West Virginia':
                data2.push({
                  "hc-key": "us-wv",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Wisconsin':
                data2.push({
                  "hc-key": "us-wi",
                  "value": dummy2[m].Magnitude
                });
                break;
              case 'Wyoming':
                data2.push({
                  "hc-key": "us-wy",
                  "value": dummy2[m].Magnitude
                });
                break;
              default:
                // default code block
            }

          }

          // Initiate the chart
          $('#container1').highcharts('Map', {

            title: {
              text: 'Avg Magnitude of earthquakes for Past 5 Year'
            },

            subtitle: {
              text: 'Avg Magnitude of earthquakes'
            },

            mapNavigation: {
              enabled: true,
              buttonOptions: {
                verticalAlign: 'bottom'
              }
            },

            colorAxis: {
              min: 0
            },

            series: [{
              data: data2,
              mapData: Highcharts.maps['countries/us/custom/us-all-mainland'],
              joinBy: 'hc-key',
              name: 'Random data',
              states: {
                hover: {
                  color: '#BADA55'
                }
              },
              dataLabels: {
                enabled: true,
                format: '{point.name}'
              }
            }]
          });
        });

      }).error(function(error) {
        console.log("error");
        alert("error");
      });





    });
  </script>
</body>

</html>
